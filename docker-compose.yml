version: '3.8'

services:
  back:
    container_name:
      back
    build:
      context: ../Back
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    expose:
      - 8080
    restart: unless-stopped
    depends_on:
      - postgres
      - minio

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5000:5432"
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  minio:
    container_name: minio
    image: minio/minio:latest
    command: server /data/ --console-address ":9001"
    ports:
      - "${NGINX_NETWORK_MINIO_S3_PORT}:${NGINX_NETWORK_MINIO_S3_PORT}"
      - "${NGINX_NETWORK_MINIO_CONSOLE_PORT}:${NGINX_NETWORK_MINIO_CONSOLE_PORT}"
    expose:
      - ${NGINX_NETWORK_MINIO_S3_PORT}
      - ${NGINX_NETWORK_MINIO_CONSOLE_PORT}
    volumes:
      - minio-storage:/data
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: '${MINIO_ACCESS_KEY}'
      MINIO_ROOT_PASSWORD: '${MINIO_SECRET_KEY}'
      MINIO_BROWSER_REDIRECT_URL: http://localhost/u0C56Q-console/

  nginx:
    container_name: nginx
    restart: on-failure
    build:
      context: ./modules/nginx
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./modules/nginx/ssl:/etc/nginx/ssl
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    depends_on:
      - back


volumes:
  postgres_data:
  minio-storage: